// Code generated by MockGen. DO NOT EDIT.
// Source: ./cron/worker.go
//
// Generated by this command:
//
//	mockgen -source=./cron/worker.go -destination=./mocks/cron_worker_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIWorkerIdProvider is a mock of IWorkerIdProvider interface.
type MockIWorkerIdProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIWorkerIdProviderMockRecorder
	isgomock struct{}
}

// MockIWorkerIdProviderMockRecorder is the mock recorder for MockIWorkerIdProvider.
type MockIWorkerIdProviderMockRecorder struct {
	mock *MockIWorkerIdProvider
}

// NewMockIWorkerIdProvider creates a new mock instance.
func NewMockIWorkerIdProvider(ctrl *gomock.Controller) *MockIWorkerIdProvider {
	mock := &MockIWorkerIdProvider{ctrl: ctrl}
	mock.recorder = &MockIWorkerIdProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWorkerIdProvider) EXPECT() *MockIWorkerIdProviderMockRecorder {
	return m.recorder
}

// Id mocks base method.
func (m *MockIWorkerIdProvider) Id() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Id indicates an expected call of Id.
func (mr *MockIWorkerIdProviderMockRecorder) Id() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockIWorkerIdProvider)(nil).Id))
}
